/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var basic_types_pb = require('./basic_types_pb.js');
var duration_pb = require('./duration_pb.js');
var timestamp_pb = require('./timestamp_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.proto.CryptoUpdateTransactionBody', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CryptoUpdateTransactionBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.proto.CryptoUpdateTransactionBody.oneofGroups_);
};
goog.inherits(proto.proto.CryptoUpdateTransactionBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.CryptoUpdateTransactionBody.displayName = 'proto.proto.CryptoUpdateTransactionBody';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.CryptoUpdateTransactionBody.oneofGroups_ = [[6,11],[7,12],[10,13]];

/**
 * @enum {number}
 */
proto.proto.CryptoUpdateTransactionBody.SendrecordthresholdfieldCase = {
  SENDRECORDTHRESHOLDFIELD_NOT_SET: 0,
  SENDRECORDTHRESHOLD: 6,
  SENDRECORDTHRESHOLDWRAPPER: 11
};

/**
 * @return {proto.proto.CryptoUpdateTransactionBody.SendrecordthresholdfieldCase}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getSendrecordthresholdfieldCase = function() {
  return /** @type {proto.proto.CryptoUpdateTransactionBody.SendrecordthresholdfieldCase} */(jspb.Message.computeOneofCase(this, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.proto.CryptoUpdateTransactionBody.ReceiverecordthresholdfieldCase = {
  RECEIVERECORDTHRESHOLDFIELD_NOT_SET: 0,
  RECEIVERECORDTHRESHOLD: 7,
  RECEIVERECORDTHRESHOLDWRAPPER: 12
};

/**
 * @return {proto.proto.CryptoUpdateTransactionBody.ReceiverecordthresholdfieldCase}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getReceiverecordthresholdfieldCase = function() {
  return /** @type {proto.proto.CryptoUpdateTransactionBody.ReceiverecordthresholdfieldCase} */(jspb.Message.computeOneofCase(this, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.proto.CryptoUpdateTransactionBody.ReceiversigrequiredfieldCase = {
  RECEIVERSIGREQUIREDFIELD_NOT_SET: 0,
  RECEIVERSIGREQUIRED: 10,
  RECEIVERSIGREQUIREDWRAPPER: 13
};

/**
 * @return {proto.proto.CryptoUpdateTransactionBody.ReceiversigrequiredfieldCase}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getReceiversigrequiredfieldCase = function() {
  return /** @type {proto.proto.CryptoUpdateTransactionBody.ReceiversigrequiredfieldCase} */(jspb.Message.computeOneofCase(this, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CryptoUpdateTransactionBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CryptoUpdateTransactionBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CryptoUpdateTransactionBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountidtoupdate: (f = msg.getAccountidtoupdate()) && basic_types_pb.AccountID.toObject(includeInstance, f),
    key: (f = msg.getKey()) && basic_types_pb.Key.toObject(includeInstance, f),
    proxyaccountid: (f = msg.getProxyaccountid()) && basic_types_pb.AccountID.toObject(includeInstance, f),
    proxyfraction: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sendrecordthreshold: jspb.Message.getFieldWithDefault(msg, 6, 0),
    sendrecordthresholdwrapper: (f = msg.getSendrecordthresholdwrapper()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    receiverecordthreshold: jspb.Message.getFieldWithDefault(msg, 7, 0),
    receiverecordthresholdwrapper: (f = msg.getReceiverecordthresholdwrapper()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    autorenewperiod: (f = msg.getAutorenewperiod()) && duration_pb.Duration.toObject(includeInstance, f),
    expirationtime: (f = msg.getExpirationtime()) && timestamp_pb.Timestamp.toObject(includeInstance, f),
    receiversigrequired: jspb.Message.getFieldWithDefault(msg, 10, false),
    receiversigrequiredwrapper: (f = msg.getReceiversigrequiredwrapper()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    memo: (f = msg.getMemo()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    maxAutomaticTokenAssociations: (f = msg.getMaxAutomaticTokenAssociations()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CryptoUpdateTransactionBody}
 */
proto.proto.CryptoUpdateTransactionBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CryptoUpdateTransactionBody;
  return proto.proto.CryptoUpdateTransactionBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CryptoUpdateTransactionBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CryptoUpdateTransactionBody}
 */
proto.proto.CryptoUpdateTransactionBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new basic_types_pb.AccountID;
      reader.readMessage(value,basic_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setAccountidtoupdate(value);
      break;
    case 3:
      var value = new basic_types_pb.Key;
      reader.readMessage(value,basic_types_pb.Key.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 4:
      var value = new basic_types_pb.AccountID;
      reader.readMessage(value,basic_types_pb.AccountID.deserializeBinaryFromReader);
      msg.setProxyaccountid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProxyfraction(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSendrecordthreshold(value);
      break;
    case 11:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setSendrecordthresholdwrapper(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReceiverecordthreshold(value);
      break;
    case 12:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setReceiverecordthresholdwrapper(value);
      break;
    case 8:
      var value = new duration_pb.Duration;
      reader.readMessage(value,duration_pb.Duration.deserializeBinaryFromReader);
      msg.setAutorenewperiod(value);
      break;
    case 9:
      var value = new timestamp_pb.Timestamp;
      reader.readMessage(value,timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirationtime(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReceiversigrequired(value);
      break;
    case 13:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setReceiversigrequiredwrapper(value);
      break;
    case 14:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMemo(value);
      break;
    case 15:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setMaxAutomaticTokenAssociations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CryptoUpdateTransactionBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CryptoUpdateTransactionBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CryptoUpdateTransactionBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountidtoupdate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      basic_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      basic_types_pb.Key.serializeBinaryToWriter
    );
  }
  f = message.getProxyaccountid();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      basic_types_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getProxyfraction();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getSendrecordthresholdwrapper();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getReceiverecordthresholdwrapper();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getAutorenewperiod();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getExpirationtime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getReceiversigrequiredwrapper();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getMemo();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxAutomaticTokenAssociations();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountID accountIDToUpdate = 2;
 * @return {?proto.proto.AccountID}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getAccountidtoupdate = function() {
  return /** @type{?proto.proto.AccountID} */ (
    jspb.Message.getWrapperField(this, basic_types_pb.AccountID, 2));
};


/** @param {?proto.proto.AccountID|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setAccountidtoupdate = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearAccountidtoupdate = function() {
  this.setAccountidtoupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasAccountidtoupdate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Key key = 3;
 * @return {?proto.proto.Key}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getKey = function() {
  return /** @type{?proto.proto.Key} */ (
    jspb.Message.getWrapperField(this, basic_types_pb.Key, 3));
};


/** @param {?proto.proto.Key|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setKey = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearKey = function() {
  this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasKey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AccountID proxyAccountID = 4;
 * @return {?proto.proto.AccountID}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getProxyaccountid = function() {
  return /** @type{?proto.proto.AccountID} */ (
    jspb.Message.getWrapperField(this, basic_types_pb.AccountID, 4));
};


/** @param {?proto.proto.AccountID|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setProxyaccountid = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearProxyaccountid = function() {
  this.setProxyaccountid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasProxyaccountid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 proxyFraction = 5;
 * @return {number}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getProxyfraction = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setProxyfraction = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 sendRecordThreshold = 6;
 * @return {number}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getSendrecordthreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setSendrecordthreshold = function(value) {
  jspb.Message.setOneofField(this, 6, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[0], value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearSendrecordthreshold = function() {
  jspb.Message.setOneofField(this, 6, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasSendrecordthreshold = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.UInt64Value sendRecordThresholdWrapper = 11;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getSendrecordthresholdwrapper = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 11));
};


/** @param {?proto.google.protobuf.UInt64Value|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setSendrecordthresholdwrapper = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[0], value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearSendrecordthresholdwrapper = function() {
  this.setSendrecordthresholdwrapper(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasSendrecordthresholdwrapper = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 receiveRecordThreshold = 7;
 * @return {number}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getReceiverecordthreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setReceiverecordthreshold = function(value) {
  jspb.Message.setOneofField(this, 7, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[1], value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearReceiverecordthreshold = function() {
  jspb.Message.setOneofField(this, 7, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasReceiverecordthreshold = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.UInt64Value receiveRecordThresholdWrapper = 12;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getReceiverecordthresholdwrapper = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 12));
};


/** @param {?proto.google.protobuf.UInt64Value|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setReceiverecordthresholdwrapper = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[1], value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearReceiverecordthresholdwrapper = function() {
  this.setReceiverecordthresholdwrapper(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasReceiverecordthresholdwrapper = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Duration autoRenewPeriod = 8;
 * @return {?proto.proto.Duration}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getAutorenewperiod = function() {
  return /** @type{?proto.proto.Duration} */ (
    jspb.Message.getWrapperField(this, duration_pb.Duration, 8));
};


/** @param {?proto.proto.Duration|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setAutorenewperiod = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearAutorenewperiod = function() {
  this.setAutorenewperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasAutorenewperiod = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Timestamp expirationTime = 9;
 * @return {?proto.proto.Timestamp}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getExpirationtime = function() {
  return /** @type{?proto.proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, timestamp_pb.Timestamp, 9));
};


/** @param {?proto.proto.Timestamp|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setExpirationtime = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearExpirationtime = function() {
  this.setExpirationtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasExpirationtime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool receiverSigRequired = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getReceiversigrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setReceiversigrequired = function(value) {
  jspb.Message.setOneofField(this, 10, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[2], value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearReceiversigrequired = function() {
  jspb.Message.setOneofField(this, 10, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasReceiversigrequired = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.BoolValue receiverSigRequiredWrapper = 13;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getReceiversigrequiredwrapper = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 13));
};


/** @param {?proto.google.protobuf.BoolValue|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setReceiversigrequiredwrapper = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.proto.CryptoUpdateTransactionBody.oneofGroups_[2], value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearReceiversigrequiredwrapper = function() {
  this.setReceiversigrequiredwrapper(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasReceiversigrequiredwrapper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.StringValue memo = 14;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getMemo = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 14));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setMemo = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearMemo = function() {
  this.setMemo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasMemo = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.Int32Value max_automatic_token_associations = 15;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.getMaxAutomaticTokenAssociations = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 15));
};


/** @param {?proto.google.protobuf.Int32Value|undefined} value */
proto.proto.CryptoUpdateTransactionBody.prototype.setMaxAutomaticTokenAssociations = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.proto.CryptoUpdateTransactionBody.prototype.clearMaxAutomaticTokenAssociations = function() {
  this.setMaxAutomaticTokenAssociations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.CryptoUpdateTransactionBody.prototype.hasMaxAutomaticTokenAssociations = function() {
  return jspb.Message.getField(this, 15) != null;
};


goog.object.extend(exports, proto.proto);
